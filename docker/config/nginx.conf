# Configuration Nginx pour le système IDS distribué

upstream monitoring_backend {
    server monitoring:9000;
}

upstream ml_api_backend {
    server ml-api:5000;
}

upstream alerts_backend {
    server alert-manager:9003;
}

upstream backup_backend {
    server backup-service:9004;
}

# Configuration du cache
proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=api_cache:10m max_size=100m inactive=60m use_temp_path=off;

server {
    listen 80;
    server_name localhost;
    
    # Logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
    
    # Configuration générale
    client_max_body_size 100M;
    proxy_connect_timeout 30s;
    proxy_send_timeout 30s;
    proxy_read_timeout 30s;
    
    # Headers de sécurité
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";
    
    # Dashboard principal - Monitoring
    location / {
        proxy_pass http://monitoring_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Cache pour les ressources statiques
        location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg)$ {
            expires 1h;
            add_header Cache-Control "public, immutable";
        }
    }
    
    # API de monitoring
    location /api/monitoring/ {
        rewrite ^/api/monitoring/(.*)$ /$1 break;
        proxy_pass http://monitoring_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Cache pour les métriques (courte durée)
        proxy_cache api_cache;
        proxy_cache_valid 200 30s;
        proxy_cache_key "$scheme$request_method$host$request_uri";
        add_header X-Cache-Status $upstream_cache_status;
    }
    
    # API ML pour la détection
    location /api/ml/ {
        rewrite ^/api/ml/(.*)$ /$1 break;
        proxy_pass http://ml_api_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Pas de cache pour les prédictions ML
        proxy_no_cache 1;
        proxy_cache_bypass 1;
    }
    
    # API de gestion d'alertes
    location /api/alerts/ {
        rewrite ^/api/alerts/(.*)$ /$1 break;
        proxy_pass http://alerts_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Cache court pour les listes d'alertes
        proxy_cache api_cache;
        proxy_cache_valid 200 10s;
        proxy_cache_key "$scheme$request_method$host$request_uri$args";
        add_header X-Cache-Status $upstream_cache_status;
        
        # Pas de cache pour les modifications POST/PUT/DELETE
        proxy_cache_methods GET HEAD;
    }
    
    # API de backup
    location /api/backup/ {
        rewrite ^/api/backup/(.*)$ /$1 break;
        proxy_pass http://backup_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Timeout plus long pour les opérations de backup
        proxy_connect_timeout 60s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        
        # Pas de cache pour les opérations de backup
        proxy_no_cache 1;
        proxy_cache_bypass 1;
    }
    
    # Endpoint de santé global
    location /health {
        access_log off;
        return 200 '{"status":"healthy","service":"nginx-proxy"}';
        add_header Content-Type application/json;
    }
    
    # Status Nginx
    location /nginx_status {
        stub_status on;
        access_log off;
        allow 127.0.0.1;
        allow 172.16.0.0/12;  # Réseau Docker
        deny all;
    }
    
    # Gestion des erreurs
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /404.html {
        return 404 '{"error":"Not Found","code":404}';
        add_header Content-Type application/json;
    }
    
    location = /50x.html {
        return 500 '{"error":"Internal Server Error","code":500}';
        add_header Content-Type application/json;
    }
}

# Configuration HTTPS (optionnelle)
# server {
#     listen 443 ssl http2;
#     server_name localhost;
#     
#     ssl_certificate /etc/nginx/ssl/nginx.crt;
#     ssl_certificate_key /etc/nginx/ssl/nginx.key;
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers HIGH:!aNULL:!MD5;
#     
#     # Redirection vers la configuration HTTP ci-dessus
#     location / {
#         proxy_pass http://127.0.0.1:80;
#     }
# }
